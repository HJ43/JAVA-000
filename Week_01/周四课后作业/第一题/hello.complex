Compiled from "Hello.java"
public class com.las.util.Hello
  // 版本号52.0
  minor version: 0
  major version: 52
  flags: ACC_PUBLIC, ACC_SUPER
  // 常量池
Constant pool:
   #1 = Methodref          #19.#38        // java/lang/Object."<init>":()V
   #2 = Fieldref           #4.#39         // com/las/util/Hello.a:I
   #3 = Fieldref           #4.#40         // com/las/util/Hello.b:I
   #4 = Class              #41            // com/las/util/Hello
   #5 = Methodref          #4.#38         // com/las/util/Hello."<init>":()V
   #6 = Methodref          #4.#42         // com/las/util/Hello.add:()I
   #7 = Methodref          #4.#43         // com/las/util/Hello.subtract:()I
   #8 = Methodref          #4.#44         // com/las/util/Hello.multiply:()I
   #9 = Methodref          #4.#45         // com/las/util/Hello.divide:()I
  #10 = Fieldref           #46.#47        // java/lang/System.out:Ljava/io/PrintStream;
  #11 = String             #48            // Sum > 1
  #12 = Methodref          #49.#50        // java/io/PrintStream.println:(Ljava/lang/String;)V
  #13 = Class              #51            // java/lang/StringBuilder
  #14 = Methodref          #13.#38        // java/lang/StringBuilder."<init>":()V
  #15 = String             #52            // i=
  #16 = Methodref          #13.#53        // java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #17 = Methodref          #13.#54        // java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
  #18 = Methodref          #13.#55        // java/lang/StringBuilder.toString:()Ljava/lang/String;
  #19 = Class              #56            // java/lang/Object
  #20 = Utf8               a
  #21 = Utf8               I
  #22 = Utf8               b
  #23 = Utf8               <init>
  #24 = Utf8               ()V
  #25 = Utf8               Code
  #26 = Utf8               LineNumberTable
  #27 = Utf8               add
  #28 = Utf8               ()I
  #29 = Utf8               subtract
  #30 = Utf8               multiply
  #31 = Utf8               divide
  #32 = Utf8               main
  #33 = Utf8               ([Ljava/lang/String;)V
  #34 = Utf8               StackMapTable
  #35 = Class              #41            // com/las/util/Hello
  #36 = Utf8               SourceFile
  #37 = Utf8               Hello.java
  #38 = NameAndType        #23:#24        // "<init>":()V
  #39 = NameAndType        #20:#21        // a:I
  #40 = NameAndType        #22:#21        // b:I
  #41 = Utf8               com/las/util/Hello
  #42 = NameAndType        #27:#28        // add:()I
  #43 = NameAndType        #29:#28        // subtract:()I
  #44 = NameAndType        #30:#28        // multiply:()I
  #45 = NameAndType        #31:#28        // divide:()I
  #46 = Class              #57            // java/lang/System
  #47 = NameAndType        #58:#59        // out:Ljava/io/PrintStream;
  #48 = Utf8               Sum > 1
  #49 = Class              #60            // java/io/PrintStream
  #50 = NameAndType        #61:#62        // println:(Ljava/lang/String;)V
  #51 = Utf8               java/lang/StringBuilder
  #52 = Utf8               i=
  #53 = NameAndType        #63:#64        // append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
  #54 = NameAndType        #63:#65        // append:(I)Ljava/lang/StringBuilder;
  #55 = NameAndType        #66:#67        // toString:()Ljava/lang/String;
  #56 = Utf8               java/lang/Object
  #57 = Utf8               java/lang/System
  #58 = Utf8               out
  #59 = Utf8               Ljava/io/PrintStream;
  #60 = Utf8               java/io/PrintStream
  #61 = Utf8               println
  #62 = Utf8               (Ljava/lang/String;)V
  #63 = Utf8               append
  #64 = Utf8               (Ljava/lang/String;)Ljava/lang/StringBuilder;
  #65 = Utf8               (I)Ljava/lang/StringBuilder;
  #66 = Utf8               toString
  #67 = Utf8               ()Ljava/lang/String;
{
  public com.las.util.Hello();
	// 返回类型void()
    descriptor: ()V
	// 方法类型public
    flags: ACC_PUBLIC
    Code:
	  // 栈的数量是2，本地变量表占用了1个
      stack=2, locals=1, args_size=1
         0: aload_0
         1: invokespecial #1                  // Method java/lang/Object."<init>":()V
         4: aload_0
         5: iconst_1
         6: putfield      #2                  // Field a:I
         9: aload_0
        10: iconst_2
        11: putfield      #3                  // Field b:I
        14: return
	  // 对应.java文件中具体的行数
      LineNumberTable:
        line 3: 0
        line 4: 4
        line 5: 9	

  public int add();
    descriptor: ()I
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field a:I
         4: aload_0
         5: getfield      #3                  // Field b:I
         8: iadd
         9: ireturn
      LineNumberTable:
        line 8: 0

  public int subtract();
    descriptor: ()I
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field a:I
         4: aload_0
         5: getfield      #3                  // Field b:I
         8: isub
         9: ireturn
      LineNumberTable:
        line 12: 0

  public int multiply();
    descriptor: ()I
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field a:I
         4: aload_0
         5: getfield      #3                  // Field b:I
         8: imul
         9: ireturn
      LineNumberTable:
        line 16: 0

  public int divide();
    descriptor: ()I
    flags: ACC_PUBLIC
    Code:
      stack=2, locals=1, args_size=1
         0: aload_0
         1: getfield      #2                  // Field a:I
         4: aload_0
         5: getfield      #3                  // Field b:I
         8: idiv
         9: ireturn
      LineNumberTable:
        line 20: 0

  public static void main(java.lang.String[]);
    descriptor: ([Ljava/lang/String;)V
    flags: ACC_PUBLIC, ACC_STATIC
    Code:
      stack=3, locals=4, args_size=1
         0: new           #4                  // class com/las/util/Hello
         3: dup
         4: invokespecial #5                  // Method "<init>":()V
         7: astore_1
         8: aload_1
         9: invokevirtual #6                  // Method add:()I
        12: istore_2
        13: aload_1
        14: invokevirtual #7                  // Method subtract:()I
        17: pop
        18: aload_1
        19: invokevirtual #8                  // Method multiply:()I
        22: pop
        23: aload_1
        24: invokevirtual #9                  // Method divide:()I
        27: pop
        28: iload_2
        29: iconst_1
        30: if_icmple     41
        33: getstatic     #10                 // Field java/lang/System.out:Ljava/io/PrintStream;
        36: ldc           #11                 // String Sum > 1
        38: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        41: iconst_0
        42: istore_3
        43: iload_3
        44: iload_2
        45: if_icmpge     79
        48: getstatic     #10                 // Field java/lang/System.out:Ljava/io/PrintStream;
        51: new           #13                 // class java/lang/StringBuilder
        54: dup
        55: invokespecial #14                 // Method java/lang/StringBuilder."<init>":()V
        58: ldc           #15                 // String i=
        60: invokevirtual #16                 // Method java/lang/StringBuilder.append:(Ljava/lang/String;)Ljava/lang/StringBuilder;
        63: iload_3
        64: invokevirtual #17                 // Method java/lang/StringBuilder.append:(I)Ljava/lang/StringBuilder;
        67: invokevirtual #18                 // Method java/lang/StringBuilder.toString:()Ljava/lang/String;
        70: invokevirtual #12                 // Method java/io/PrintStream.println:(Ljava/lang/String;)V
        73: iinc          3, 1
        76: goto          43
        79: return
      LineNumberTable:
        line 24: 0
        line 25: 8
        line 26: 13
        line 27: 18
        line 28: 23
        line 29: 28
        line 30: 33
        line 32: 41
        line 33: 48
        line 32: 73
        line 35: 79
      StackMapTable: number_of_entries = 3
        frame_type = 253 /* append */
          offset_delta = 41
          locals = [ class com/las/util/Hello, int ]
        frame_type = 252 /* append */
          offset_delta = 1
          locals = [ int ]
        frame_type = 250 /* chop */
          offset_delta = 35
}